/*
 * This file is generated by jOOQ.
 */
package com.armin.revolut.models.tables.daos;


import com.armin.revolut.models.tables.Account;
import com.armin.revolut.models.tables.records.AccountRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountDao extends DAOImpl<AccountRecord, com.armin.revolut.models.tables.pojos.Account, Long> {

    /**
     * Create a new AccountDao without any configuration
     */
    public AccountDao() {
        super(Account.ACCOUNT, com.armin.revolut.models.tables.pojos.Account.class);
    }

    /**
     * Create a new AccountDao with an attached configuration
     */
    public AccountDao(Configuration configuration) {
        super(Account.ACCOUNT, com.armin.revolut.models.tables.pojos.Account.class, configuration);
    }

    @Override
    public Long getId(com.armin.revolut.models.tables.pojos.Account object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Account.ACCOUNT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchById(Long... values) {
        return fetch(Account.ACCOUNT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.armin.revolut.models.tables.pojos.Account fetchOneById(Long value) {
        return fetchOne(Account.ACCOUNT.ID, value);
    }

    /**
     * Fetch records that have <code>CODE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchRangeOfCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Account.ACCOUNT.CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CODE IN (values)</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchByCode(String... values) {
        return fetch(Account.ACCOUNT.CODE, values);
    }

    /**
     * Fetch a unique record that has <code>CODE = value</code>
     */
    public com.armin.revolut.models.tables.pojos.Account fetchOneByCode(String value) {
        return fetchOne(Account.ACCOUNT.CODE, value);
    }

    /**
     * Fetch records that have <code>USER_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Account.ACCOUNT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>USER_ID IN (values)</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchByUserId(Integer... values) {
        return fetch(Account.ACCOUNT.USER_ID, values);
    }

    /**
     * Fetch records that have <code>BALANCE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchRangeOfBalance(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Account.ACCOUNT.BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BALANCE IN (values)</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchByBalance(BigDecimal... values) {
        return fetch(Account.ACCOUNT.BALANCE, values);
    }

    /**
     * Fetch records that have <code>CREATED_ON BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchRangeOfCreatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Account.ACCOUNT.CREATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATED_ON IN (values)</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchByCreatedOn(LocalDateTime... values) {
        return fetch(Account.ACCOUNT.CREATED_ON, values);
    }

    /**
     * Fetch records that have <code>UPDATED_ON BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchRangeOfUpdatedOn(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Account.ACCOUNT.UPDATED_ON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>UPDATED_ON IN (values)</code>
     */
    public List<com.armin.revolut.models.tables.pojos.Account> fetchByUpdatedOn(LocalDateTime... values) {
        return fetch(Account.ACCOUNT.UPDATED_ON, values);
    }
}
